swagger: '2.0'
info:
  title: Vandelay Industries API - DRAFT
  description: >
    [Vandelay
    Industries](http://www.urbandictionary.com/define.php?term=Vandelay) is a
    vertically integrated chemical manufacturing, import/export, and sales
    enterprise headquartered in the Upper West Side, NYC. It was founded by Art
    Vandelay in 1990.


    It is known both for the quality of its product as well as its aggressive
    salesperson recruiting program.


    The Vandelay Industries API platform, documented here, represents a unified
    view of its ERP and CRM systems for use by both internal applications and
    3rd-party strategic partner system integrations.
  version: 0.0.1
host: vandelay.apivista.com
schemes:
  - https
  - http
basePath: /v1
produces:
  - application/json
paths:
  /health:
    get:
      tags:
        - health check
      summary: A basic API Health Check Endpoint
      security:
        - OAuth2: [ admin ]
      description: >-
        Allows monitoring applications to verify that the API is available and healthy
      operationId: getAPIHealth
      responses:
        '200':
          description: API is up and healthy
        '401':
          description: Not authenticated
        '403':
          description: Access token does not have the required scope
        '503':
          description: API is not reachable
  /factories:
    get:
      tags:
        - real estate
      summary: List factories in the ERP system
      description: >-
        The factory is an important top-level object for tracking both
        manufacturing activities as well as supply chain & order fulfillment,
        underpinning Vandelay's import/export business.
      operationId: getFactories
      parameters:
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/offsetParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Factory'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalError'
        '503':
          $ref: '#/responses/Unavailable'
  /factories/{factoryId}/machines:
    get:
      tags:
        - capital equipment
      summary: List machines at a given factory
      description: >-
        The factory is an important top-level object for tracking both
        manufacturing activities as well as supply chain & order fulfillment,
        underpinning Vandelay's import/export business.
      operationId: getMachines
      parameters:
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/offsetParam'
        - name: factoryId
          in: path
          description: The ID of the factory housing the machine
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Machine'
        '400':
          description: Invalid Factory ID
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalError'
        '503':
          $ref: '#/responses/Unavailable'
  /warehouses:
    get:
      tags:
        - real estate
      summary: List warehouses in the ERP system
      description: >-
        The warehouse is an important top-level object for tracking both inbound
        material and outbound product.
      operationId: getWarehouses
      parameters:
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/offsetParam'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Warehouse'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalError'
        '503':
          $ref: '#/responses/Unavailable'
  /warehouses/{warehouseId}/inventory:
    get:
      tags:
        - inventory
      summary: Return an array containing inventory for a single warehouse
      description: Currently an unpaged inventory list
      operationId: getWarehouse
      parameters:
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/offsetParam'
        - name: warehouseId
          in: path
          description: The ID of the warehouse to return inventory for inventory for
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Inventory'
        '400':
          description: Invalid Warehouse ID
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalError'
        '503':
          $ref: '#/responses/Unavailable'
    post:
      tags:
        - inventory
      summary: Records the addition of inventory to a warehouse
      operationId: addItem
      parameters:
        - name: warehouseId
          in: path
          description: The ID of the warehouse receiving the item
          required: true
          type: string
        - name: item
          description: |
            This object represents all the Item specifics
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryItem'
      responses:
        '201':
          description: Item Added
          schema:
            type: array
            items:
              $ref: '#/definitions/Inventory'
        '400':
          description: Invalid Warehouse Inventory Item received
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
    patch:
      tags:
        - inventory
      summary: Updates an inventory item in a warehouse
      operationId: updateItem
      parameters:
        - name: warehouseId
          in: path
          description: The ID of the warehouse containing the item
          required: true
          type: string
        - name: item
          description: |
            This object represents all the Item specifics
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryUpdate'
      responses:
        '201':
          description: Item Updated
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryItem'
        '400':
          description: Invalid Warehouse Inventory Item received
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
    delete:
      tags:
        - inventory
      summary: Deletes an inventory item in a warehouse
      operationId: deleteItem
      parameters:
        - name: warehouseId
          in: path
          description: The ID of the warehouse containing the item
          required: true
          type: string
        - name: item
          description: |
            This object represents all the Item specifics
          in: body
          required: true
          schema:
            $ref: '#/definitions/InventoryUpdate'
      responses:
        '200':
          description: Item Deleted
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryItem'
        '400':
          description: Invalid Warehouse Inventory Item received
          schema:
            $ref: '#/definitions/ValidationError'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
parameters:
  offsetParam:
    name: offset
    in: header
    required: false
    type: integer
    minimum: 0
    description: The number of items to skip before starting to collect the result set.
  limitParam:
    name: limit
    in: header
    required: false
    type: integer
    minimum: 1
    maximum: 50
    default: 20
    description: The numbers of items to return.
responses:
  NotFound:
    description: The specified resource was not found
    schema:
      $ref: '#/definitions/Error'
  BadRequest:
    description: A validation error was discovered with the request
    schema:
      $ref: '#/definitions/Error'
  Unauthorized:
    description: API key missing or invalid
    schema:
      $ref: '#/definitions/Error'
  Unavailable:
    description: API is unavailable
    schema:
      $ref: '#/definitions/Error'
  InternalError:
    description: An internal server error occured
    schema:
      $ref: '#/definitions/Error'
definitions:
  Factory:
    type: object
    properties:
      factoryId:
        type: integer
        format: int64
      factoryName:
        type: string
        example: Newark Latex Mfg.
      factoryDescription:
        type: string
        example: >-
          Key East Coast facility for raw latex material to be processed into
          final products for the medical industry.
      factoryAddress:
        $ref: '#/definitions/Address'
  Machine:
    type: object
    properties:
      factoryId:
        type: integer
        format: int64
      machineId:
        type: integer
        format: int64
      machineName:
        type: string
        example: Extruder AB-100
      machineDescription:
        type: string
        example: 'Extruder with 1,000fpm output capacity'
  Warehouse:
    type: object
    properties:
      warehouseId:
        type: integer
        format: int64
      warehouseName:
        type: string
        example: Pier 10 Holdings
      warehouseDescription:
        type: string
        example: >-
          Key East Coast shipping/receiving location for storing finished
          product, ready for distribution.
      warehouseAddress:
        $ref: '#/definitions/Address'
  Inventory:
    type: object
    properties:
      warehouseId:
        type: integer
        format: int64
      itemId:
        type: integer
        format: int64
      itemSKU:
        type: integer
        format: int64
      itemQuantity:
        type: string
        example: int64
      itemName:
        type: string
        example: Waterproof seal
      itemDescription:
        type: string
        example: For sealing specimens to preserve them
  InventoryUpdate:
    type: object
    properties:
      warehouseId:
        type: integer
        format: int64
      itemId:
        type: integer
        format: int64
      itemSKU:
        type: integer
        format: int64
      itemQuantity:
        type: integer
        format: int64
      itemName:
        type: string
        example: Waterproof seal
      itemDescription:
        type: string
        example: For sealing specimens to preserve them
  InventoryItem:
    type: object
    properties:
      itemSKU:
        type: integer
        format: int64
      itemQuantity:
        type: integer
        format: int64
      itemName:
        type: string
        example: Waterproof seal
      itemDescription:
        type: string
        example: For sealing specimens to preserve them
  Address:
    type: object
    properties:
      buildingName:
        type: string
      streetLine1:
        type: string
      streetLine2:
        type: string
      city:
        type: string
      stateProvince:
        type: string
      zipPostalCode:
        type: string
      country:
        type: string
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
  ValidationError:
    type: object
    properties:
      code:
        type: string
      objectId:
        type: string
      message:
        type: string
    required:
      - code
      - message
security:
  - ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://vandelay.apivista.com/oauth/authorize
    tokenUrl: https://vandelay.apivista.com/oauth/token
    scopes:
      admin: Grants read and write access to administrative information